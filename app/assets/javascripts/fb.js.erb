function getFriendsList(callback) {
	FB.api('/me/friends', function(response) {
		friendList = response.data;
		callback(friendList);
	});
}

var locations = {};
function main() {
	<% Settings.reload! %>

	// get friends' locations
	console.log('getting friends locations');
	//document.getElementById("progress_count").style.visibility = 'visible';
	
	getFriendsList(function(friendsList) {
		
    	FB.getLoginStatus(function(loginStatusResponse) {
        	var batches = [];
			var batchData = [];

			document.getElementById("total_friends").innerHTML = <%= Settings.friends_list_length %>;
			
			for (var i=0; i < <%= Settings.friends_list_length %>; i++) {
				var request = new Object(); 
				request.method = 'GET';
				request.relative_url = '/' + friendList[i].id + '?fields=location,name,picture';
				batchData.push(request); 
			
				// need to break up batches into size 50, which is facebook's batch limit
				if (i % 50 == 0) {
				   	batches.push(batchData);
				   	batchData = [];
				}
			}
			
    	   	for (var i = 0; i < batches.length; i++) {
       			FB.api("/", "POST", 
       				{ access_token: loginStatusResponse.authResponse.accessToken, batch: batches[i] }, 
        			function(response) {
						for (var i = 0; i < response.length; i++) {
        					locationObject = JSON.parse(response[i].body).location;
        					if (locationObject) {
	
								id = JSON.parse(response[i].body).id;
								name = JSON.parse(response[i].body).name;
								pic = JSON.parse(response[i].body).picture.data.url;
								city = locationObject.name;
								if (city != null) {
									var userInfoList = null;
									var userInfo = {};
									userInfo.id = id;
									userInfo.name = name;
									userInfo.pic = pic;
									
									if (locations[city] != null) {
										// retrieve list of users first
										userInfoList = locations[city];
									}
									else {
										userInfoList = [];
									}
									
									userInfoList.push(userInfo);
									locations[city] = userInfoList;
								}
							}
        				}  
        				addMarkersForLocations(locations); 
       				});
				}
    	  });
	});
}